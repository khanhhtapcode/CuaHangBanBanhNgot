<?php

namespace App\Http\Controllers;

use Hash;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\Session;

session_start();
class CheckoutController extends Controller
{
    //
    public function login_checkout()
    {
        $category_product = DB::table('tbl_category_product')->orderby('category_id', 'desc')->get();
        $brand_product = DB::table('tbl_brand')->orderby('brand_id', 'desc')->get();
        return view('pages.checkout.login_checkout')
            ->with('category_product', $category_product)
            ->with('brand_product', $brand_product);
    }
    public function signup_customer(Request $request)
    {
        $data = array();
        $data['customer_name'] = $request->customer_name;
        $data['customer_email'] = $request->customer_email;
        $data['customer_password'] = md5($request->customer_password);
        $data['customer_phone'] = $request->customer_phone;
        $customer_id = DB::table('tbl_customer')->insertGetId($data);
        Session::put('customer_id', $customer_id);
        Session::put('customer_name', $request->customer_name);
        return Redirect::to('/checkout');
    }
    public function checkout()
    {
        $category_product = DB::table('tbl_category_product')->orderby('category_id', 'desc')->get();
        $brand_product = DB::table('tbl_brand')->orderby('brand_id', 'desc')->get();
        $cart = session()->get('cart', []); // L·∫•y gi·ªè h√†ng t·ª´ session, m·∫∑c ƒë·ªãnh m·∫£ng r·ªóng n·∫øu ch∆∞a c√≥
        return view('pages.checkout.show_checkout')
            ->with('category_product', $category_product)
            ->with('brand_product', $brand_product)
            ->with('cart', $cart); // Truy·ªÅn bi·∫øn cart sang view
    }
    public function save_shipping(Request $request)
    {
        $data = array();
        $data['shipping_name'] = $request->shipping_name;
        $data['shipping_email'] = $request->shipping_email;
        $data['shipping_notes'] = $request->shipping_notes;
        $data['shipping_address'] = $request->shipping_address;
        $data['shipping_phone'] = $request->shipping_phone;
        $shipping_id = DB::table('tbl_shipping')->insertGetId($data);
        Session::put('shipping_id', $shipping_id);
        Session::put('shipping_name', $request->shipping_name);
        return Redirect::to('/payment');
    }
    public function payment()
    {
        $product = DB::table('tbl_product')->orderby('product_id', 'desc')->get();
        $category_product = DB::table('tbl_category_product')->orderby('category_id', 'desc')->get();
        $brand_product = DB::table('tbl_brand')->orderby('brand_id', 'desc')->get();
        $cart = session()->get('cart', []); // L·∫•y gi·ªè h√†ng t·ª´ session, m·∫∑c ƒë·ªãnh m·∫£ng r·ªóng n·∫øu ch∆∞a c√≥
        return view('pages.checkout.payment')->with('category_product', $category_product)
            ->with('brand_product', $brand_product)
            ->with('product', $product)
            ->with('cart', $cart); // Truy·ªÅn bi·∫øn cart sang view
    }
    public function logout_checkout()
    {
        Session::flush();
        return Redirect::to('/login-checkout');
    }
    public function login_customer(Request $request)
    {
        $email = $request->customer_email;
        $password = md5($request->customer_password);
        $result = DB::table('tbl_customer')->where('customer_email', $email)->where('customer_password', $password)->first();
        if ($result) {
            Session::put('customer_id', $result->customer_id);
            return Redirect::to('/checkout');
        } else {
            return Redirect::to('/login-checkout')->with('message', 'T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng');
        }
    }
    public function order_place(Request $request)
    {
        // L∆∞u th√¥ng tin thanh to√°n
        $data = array();
        $data['payment_method'] = $request->payment_option;
        $data['payment_status'] = 'ƒêang ch·ªù x·ª≠ l√Ω';
        $payment_id = DB::table('tbl_payment')->insertGetId($data);

        // L∆∞u ƒë∆°n h√†ng
        $order_data = array();
        $order_data['customer_id'] = Session::get('customer_id');
        $order_data['shipping_id'] = Session::get('shipping_id');
        $order_data['payment_id'] = $payment_id;
        $order_data['order_total'] = Session::get('total'); // üí∞ T·ªïng ti·ªÅn
        $order_data['order_status'] = 'ƒêang x·ª≠ l√Ω';
        $order_id = DB::table('tbl_order')->insertGetId($order_data);

        // L∆∞u chi ti·∫øt ƒë∆°n h√†ng (gi·∫£ s·ª≠ c√≥ m·∫£ng $cart l∆∞u trong Session)
        $cart = Session::get('cart');
        // L·∫∑p qua t·ª´ng s·∫£n ph·∫©m trong gi·ªè h√†ng v√† l∆∞u v√†o tbl_order_details
        foreach ($cart as $item) {
            $order_detail = array();
            $order_detail['order_id'] = $order_id;
            $order_detail['product_id'] = $item['product_id'];
            $order_detail['product_name'] = $item['product_name'];
            $order_detail['product_price'] = $item['product_price'];
            $order_detail['product_sales_quantity'] = $item['quantity'];
            DB::table('tbl_order_details')->insert($order_detail);
        }
        if ($data["payment_method"] == 1) {
            // Thanh to√°n b·∫±ng th·∫ª ATM n·ªôi ƒë·ªãa
            // return view('pages.checkout.handcash');
            echo '<h2 style="color: red; text-align: center;">Thanh to√°n b·∫±ng th·∫ª ATM n·ªôi ƒë·ªãa</h2>';
        } elseif ($data["payment_method"] == 2) {
            $category_product = DB::table('tbl_category_product')->orderby('category_id', 'desc')->get();
            $brand_product = DB::table('tbl_brand')->orderby('brand_id', 'desc')->get();
            // Thanh to√°n b·∫±ng tieenf m·∫∑t
            return view('pages.checkout.handcash')
                ->with('category_product', $category_product)
                ->with('brand_product', $brand_product);
            // X√≥a gi·ªè h√†ng sau khi ƒë·∫∑t h√†ng
            Session::forget('cart');
            // echo '<h2 style="color: red; text-align: center;">Thanh to√°n b·∫±ng ti·ªÅn m·∫∑t</h2>';
        } elseif ($data["payment_method"] == 3) {
            // Thanh to√°n b·∫±ng ti·ªÅn Chuy·ªÉn Kho·∫£n ngan h√†ng
            // 
            echo '<h2 style="color: red; text-align: center;">Thanh to√°n b·∫±ng chuyen khoan ngan hang</h2>';
        }
        // X√≥a gi·ªè h√†ng sau khi ƒë·∫∑t h√†ng
        Session::forget('cart');
        Session::forget('total');

        // return redirect('/payment')->with('message', 'ƒê·∫∑t h√†ng th√†nh c√¥ng!');
    }
    public function manage_order()
    {
        $lietke_donhang = DB::table('tbl_order')
            ->join('tbl_customer', 'tbl_order.customer_id', '=', 'tbl_customer.customer_id')
            ->select('tbl_order.*', 'tbl_customer.customer_name', 'tbl_customer.customer_email')
            ->orderBy('tbl_order.order_id', 'desc')
            ->get();

        return view('admin.manage_order')
            ->with('lietke_donhang', $lietke_donhang);
    }
    public function update_order($order_id, Request $request){

    }
    public function delete_order($order_id, Request $request){

    }
}